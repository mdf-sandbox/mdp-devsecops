name: reusable-workflow-build-release-package-ing

on:
  workflow_call:
    inputs:
      repository:
        type: string
        description: Repository name
        required: true
      ref:
        type: string
        description: Source branch of the pull request
        required: true

# Use the Bash shell as default settings for all jobs in the workflow
defaults:
  run:
    shell: bash

jobs:
  bump_release_version:
    name: Bump Release Version and Create Release Tag
    runs-on: ubuntu-20.04
    if: ${{ (startsWith(inputs.ref, 'release/')) || startsWith(inputs.ref, 'hotfix/') }}
    outputs:
      work_item_id: ${{ steps.op1.outputs.work_item_id }}

    steps:
      - name: Checkout main branch of ${{ inputs.repository }} repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: main
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ vars.PYTHON_VERSION_VAR }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ vars.POETRY_VERSION_VAR }}

      - name: Set environment variables
        run: |
          echo "CURRENT_VERSION=$(poetry version --dry-run -s)" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$(echo $(poetry version --dry-run -s) | awk -F'a' '{print $1}')" >> $GITHUB_ENV
          echo "WORK_ITEM_ID=$(echo ${{ github.event.pull_request.title }} | awk -F'AB#' '{print $2}' | awk -F' ' '{print $1}')" >> $GITHUB_ENV

      - name: Bump package version to ${{ env.RELEASE_VERSION }}
        run: |
          poetry self add poetry-bumpversion
          poetry version ${{ env.RELEASE_VERSION }}

      - name: Add Azure Boards environment variables
        if: ${{ startsWith(inputs.ref, 'release/') }}
        run: |
            echo "WORK_ITEM_ID=$(echo ${{ env.WORK_ITEM_ID }})" > ./deployment/service/azure_devops/azure_devops_boards.env

      - name: Setup global Git configs
        run: |
          git config --global user.name "DevOps" #TODO: ${{ vars.GITHUB_DEVOPS_USERNAME_VAR }}
          git config --global user.email "DevOps@users.noreply.github.com" #TODO: ${{ vars.GITHUB_DEVOPS_EMAIL_VAR }}

      - name: Release version v${{ env.RELEASE_VERSION }} on main branch
        if: ${{ startsWith(inputs.ref, 'release/') }}
        run: |
          git commit -am "chore: :bookmark: Release version v${{ env.RELEASE_VERSION }}"
          git push -u origin main

          git tag -a "v${{ env.RELEASE_VERSION }}" -m "Release version v${{ env.RELEASE_VERSION }}"
          git push origin "v${{ env.RELEASE_VERSION }}"
          git push -d origin ${{ inputs.ref }}

      - name: Release hotfix version v${{ env.RELEASE_VERSION }} on main branch
        if: ${{ startsWith(inputs.ref, 'hotfix/') }}
        run: |
          git tag -a "v${{ env.RELEASE_VERSION }}" -m "Release hotfix version v${{ env.RELEASE_VERSION }}"
          git push origin "v${{ env.RELEASE_VERSION }}"
          git push -d origin ${{ inputs.ref }}

      - name: Set job outputs
        id: op1
        run: |
          echo "work_item_id=$(echo ${{ env.WORK_ITEM_ID }})" >> $GITHUB_OUTPUT

  update-work-item:
    name: Update a work item on Azure Boards
    runs-on: ubuntu-20.04
    needs: [bump_release_version]

    steps:

      - name: Checkout main branch of DevSecOps repository
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.GITHUB_DEVOPS_REPOSITORY_VAR }}
          ref: main
          fetch-depth: 0

      - name: Update a work item on Azure Boards
        uses: ./custom-actions/azure-devops-boards/update-work-item
        with:
          pr_state: ${{ github.event.pull_request.state }}
          pr_merged_by: ${{ github.event.pull_request.merged_by.login }}
          pr_merged_at: ${{ github.event.pull_request.merged_at }}
          work_item_id: ${{ needs.bump_release_version.outputs.work_item_id }}
          board_column: 'PR - Merged'
          token: ${{ secrets.AZURE_DEVOPS_PAT }} #TODO ${{ secrets.AZURE_DEVOPS_TOKEN }}